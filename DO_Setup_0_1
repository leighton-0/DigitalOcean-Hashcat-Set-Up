
#!/bin/bash

######################################################################
##               Reconftw Set Up Script                             ##
#######################################################################

s=1                                  # Slows scritpt down so you can see whats going on




apt install wget
apt install git

printf '\n============================================================\n'
printf '[+]  Upload standard .bash_aliases & upgrades to .bashrc. \n'
printf '============================================================\n\n'
sleep $s


# Back-up original .bashrc incase I Fuck it up
if [ ! -f ~/.bashrc.bak ]   #Check if bashrc.bak has already been copied. If yes then skip
then
    cp /root/.bashrc /root/.bashrc.bak          # bak Up bashrc incase I fuck it up
exit 0
exit 1
    # Upload my standard aliases file
    wget https://raw.githubusercontent.com/leighton-0/Aliases-Bashrc-Scripts-and-Functions/master/.bash_aliases
exit
    # Add pointer to new .bash_aliases
    cat << EOF >>.bashrc           # use heredoc to add multiple lines to .bashrc. the - allows indetaiton
    if [ -f ~/.bash_aliases ]
    then
        . ~/.bash_aliases
EOF
fi



# Customise .bashrc file
echo 'export HISTCONTROL=ignoredups' >>  ~/.bashrc # && source ~/.bashrc        # ignore duplicate commands in the history.
echo 'export HISTTIMEFORMAT= %D' >> ~/.bashrc# && source ~/.bashrc
#else
#  rm -r ~/.bashrc && cp ~/.bashrc.bak  ~/.bashrc
fi

. .bashrc && . .bash_aliases




printf '\n[+] install reports directory zz_reports\n'

if [ ! -d ~/zz_reports ]; then        #Check if zz_reports dir already exists. If no then creates directory
    mkdir ~/zz_reports                #Need to update the .cfg file to reflect custom save dirrectory (although not wk for me - wip)
fi
sleep $s

printf '\n[+] upload latest .bash_alias file\n'

if [ ! -d ~/reconftw ]
then           #Check it Reconftw already exists. If no then loads reconftw program
    printf '\n[+] reconftw doesnt exists installing reconftw\n'
    sleep $s
    git clone https://github.com/six2dez/reconftw
    cd reconftw/
    ./install.sh
else
printf '\n[+] reconftw already exists\n'
fi
sleep $s

printf '\n[+] loading custom reconftw.cfg and amass config.ini files\n'
sleep $s
rm -r ~/reconftw/reconftw.cfg 2> /dev/null
wget -P ~/reconftw https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/reconftw.cfg
rm -r ~/.config/amass/config.ini 2> /dev/null
wget -P ~/.config/amass/ https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/config.ini
sleep $s

printf '\n[+] loading custom setenv.sh script & .env file \n'
sleep $s
if [ ! -d ~/reconftw/setenv.sh ]
then
  touch ~/reconftw/.env 2> /dev/null          # Place all API & secret keys in here
  echo FIRST_NAME=Agnes >> ~/reconftw/.env
  echo LAST_NAME=Obel >> ~/reconftw/.env
  printf '\n[+] Install script to  run the .env file\n'
  sleep $s
  wget -P ~/reconftw https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/setenv.sh
  printf '\n[+] Upload .env file manually\n'
  sleep $s
  #wget -P ~/reconftw https://raw.githubusercontent.com/leighton-0/reconftw-data/main/.env?token=GHSAT0AAAAAABUJXRGLW6F5NVFK2S2RXOO4YTWSIUA
  printf '\n[+] Upload targets.txt file do this manually\n'
  sleep $s
  touch ~/reconftw/targets.txt 2> /dev/null
  #wget -P ~/reconftw https://raw.githubusercontent.com/leighton-0/DigitalOcean-ReconFTW-Set-Up/main/targets.txt
  chmod +x ~/reconftw/setenv.sh
fi
source ~/reconftw/setenv.sh
./setenv.sh
printf '[+] REMEMBER TO UPLOAD THE .env FILE CONTAINING api keys \n'
printf '[+] REMEMBER TO UPLOAD THE targets.txt FILE manually \n'
printf '[+] Prove env file is working \n'
echo "${FIRST_NAME} ${LAST_NAME}"
sleep $s
printf '\n============================================================\n'
printf '[+] The script to  run the .env file needs to to included in the start script\n'
printf '[+] targets are listed in targets.txt loaded in the reconftw dir\n'
printf '[+] start script './setenv.sh && ./reconftw.sh -l targets.txt -r -o ~/zz_reports
printf '============================================================\n\n'
sleep $s
echo "DONE! :)"
# COMMENT BLOCK STARTS ====================
#if (1 == 0); then
#--------------------------
# To set up a file containing all your api and other "secret keys" do the following.
# create a file called env.txt
# the first entry is(for testing)
#     FIRST_NAME=Agnes
#     LAST_NAME=Obel
# copy all the api and other key to be read by reconftw (both config.ini and config.cfg) into it.
# For security i keep this on my local drive - not on github.
# After installation of reconftw I manually copy this env.txt file into the reconftw directory.
# There is probably a secure of doing this automatically - its on the TD list
# Next
# Create a script called <setenv.sh>.
# Copy the following into it
#     #!/bin/bash
#     # Show env vars
#     grep -v '^#' .env
#
#     # Export env vars
#     export $(grep -v '^#' .env | xargs)
# chmod +X setenv.sh
# source setenv.sh
#ss
# confirm env vars is working do below
#     echo "${FIRST_NAME} ${LAST_NAME}"
# should return.
# FIRST_NAME=Agnes
# LAST_NAME=Obel
#
# NOTE;
# You need to reference all api key environmentl variavbes in both the ini and cfg files
#
# code snipet ==start
# ELLOW="\e[33m"
# GREEN="\e[1;32m"
# RED="\e[1;31m"
# ENDCOLOR="\e[0m"
#
# echo -e "${YELLOW}"
# echo -e "====================================="
# echo -e "|    CLONE ALL REPOSITORY GITHUB    |"
# echo -e "====================================="
# echo -e "| Thank you for using this script.  |"
# echo -e "| Give me a star if it's useful.    |"
# echo -e "====================================="
# echo -e "${ENDCOLOR}"
# echo -e "${YELLOW}"
#
#
# code snipet == finish
#
# -------------------------------
# fi
# COMMENT BLOCK ENDS ============================
#exit
